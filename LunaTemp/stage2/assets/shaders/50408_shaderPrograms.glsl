["\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec3 in_POSITION0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4 vs_INTERP0;\nvarying highp vec3 vs_INTERP1;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    vs_INTERP1.xyz = u_xlat0.xyz;\n    gl_Position = u_xlat1 + hlslcc_mtx4x4unity_MatrixVP[3];\n    vs_INTERP0 = in_TEXCOORD0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tfloat _Fillpercent;\nuniform \tvec4 _OffColor;\nuniform \tvec4 _Edge_color;\nuniform \tfloat _Edge_Width;\nuniform \tfloat _MeshHeight;\nuniform lowp sampler2D _Texture2D;\nvarying highp vec4 vs_INTERP0;\nvarying highp vec3 vs_INTERP1;\n#define SV_TARGET0 gl_FragData[0]\nvec3 u_xlat0;\nbool u_xlatb0;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nbool u_xlatb3;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.x = vs_INTERP1.y + (-hlslcc_mtx4x4unity_ObjectToWorld[3].y);\n    u_xlat3.x = abs(u_xlat0.x) + (-_Edge_Width);\n    u_xlat6 = _Fillpercent * _MeshHeight + abs(_Edge_Width);\n    u_xlatb3 = u_xlat3.x>=u_xlat6;\n    u_xlatb0 = abs(u_xlat0.x)>=u_xlat6;\n    u_xlat0.x = (u_xlatb0) ? 0.0 : 1.0;\n    u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n    u_xlat10_1.xyz = texture2D(_Texture2D, vs_INTERP0.xy).xyz;\n    u_xlat2.xyz = (-u_xlat10_1.xyz) + _Edge_color.xyz;\n    u_xlat3.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat10_1.xyz;\n    u_xlat3.xyz = u_xlat3.xyz + (-_OffColor.xyz);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat3.xyz + _OffColor.xyz;\n    SV_TARGET0.xyz = u_xlat0.xyz;\n    SV_TARGET0.w = 1.0;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(0) uniform UnityPerDraw {\n#endif\n\tUNITY_UNIFORM vec4                hlslcc_mtx4x4unity_ObjectToWorld[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_WorldToObject[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_LODFade;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_WorldTransformParams;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RenderingLayer;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(2) uniform UnityPerFrame {\n#endif\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXglstate_lightmodel_ambient;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_AmbientSky;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_AmbientEquator;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_AmbientGround;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_IndirectSpecColor;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4glstate_matrix_projection[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_MatrixV[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_MatrixInvV[4];\n\tUNITY_UNIFORM vec4                hlslcc_mtx4x4unity_MatrixVP[4];\n\tUNITY_UNIFORM int Xhlslcc_UnusedXunity_StereoEyeIndex;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_ShadowColor;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\nin highp vec3 in_POSITION0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_INTERP0;\nout highp vec3 vs_INTERP1;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    vs_INTERP1.xyz = u_xlat0.xyz;\n    gl_Position = u_xlat1 + hlslcc_mtx4x4unity_MatrixVP[3];\n    vs_INTERP0 = in_TEXCOORD0;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(0) uniform UnityPerDraw {\n#endif\n\tUNITY_UNIFORM vec4                hlslcc_mtx4x4unity_ObjectToWorld[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_WorldToObject[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_LODFade;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_WorldTransformParams;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RenderingLayer;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(1) uniform UnityPerMaterial {\n#endif\n\tUNITY_UNIFORM float                _Fillpercent;\n\tUNITY_UNIFORM vec4                _OffColor;\n\tUNITY_UNIFORM vec4                _Edge_color;\n\tUNITY_UNIFORM float                _Edge_Width;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedX_Texture2D_TexelSize;\n\tUNITY_UNIFORM float                _MeshHeight;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _Texture2D;\nin highp vec4 vs_INTERP0;\nin highp vec3 vs_INTERP1;\nlayout(location = 0) out mediump vec4 SV_TARGET0;\nvec3 u_xlat0;\nbool u_xlatb0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nbool u_xlatb3;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.x = vs_INTERP1.y + (-hlslcc_mtx4x4unity_ObjectToWorld[3].y);\n    u_xlat3.x = abs(u_xlat0.x) + (-_Edge_Width);\n    u_xlat6 = _Fillpercent * _MeshHeight + abs(_Edge_Width);\n    u_xlatb3 = u_xlat3.x>=u_xlat6;\n    u_xlatb0 = abs(u_xlat0.x)>=u_xlat6;\n    u_xlat0.x = (u_xlatb0) ? 0.0 : 1.0;\n    u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n    u_xlat16_1.xyz = texture(_Texture2D, vs_INTERP0.xy).xyz;\n    u_xlat2.xyz = (-u_xlat16_1.xyz) + _Edge_color.xyz;\n    u_xlat3.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat16_1.xyz;\n    u_xlat3.xyz = u_xlat3.xyz + (-_OffColor.xyz);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat3.xyz + _OffColor.xyz;\n    SV_TARGET0.xyz = u_xlat0.xyz;\n    SV_TARGET0.w = 1.0;\n    return;\n}\n\n","\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec3 in_POSITION0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4 vs_INTERP0;\nvarying highp vec3 vs_INTERP1;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    vs_INTERP1.xyz = u_xlat0.xyz;\n    gl_Position = u_xlat1 + hlslcc_mtx4x4unity_MatrixVP[3];\n    vs_INTERP0 = in_TEXCOORD0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tfloat _Fillpercent;\nuniform \tvec4 _OffColor;\nuniform \tvec4 _Edge_color;\nuniform \tfloat _Edge_Width;\nuniform \tfloat _MeshHeight;\nuniform lowp sampler2D _Texture2D;\nvarying highp vec4 vs_INTERP0;\nvarying highp vec3 vs_INTERP1;\n#define SV_TARGET0 gl_FragData[0]\nvec3 u_xlat0;\nbool u_xlatb0;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nbool u_xlatb3;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.x = vs_INTERP1.y + (-hlslcc_mtx4x4unity_ObjectToWorld[3].y);\n    u_xlat3.x = abs(u_xlat0.x) + (-_Edge_Width);\n    u_xlat6 = _Fillpercent * _MeshHeight + abs(_Edge_Width);\n    u_xlatb3 = u_xlat3.x>=u_xlat6;\n    u_xlatb0 = abs(u_xlat0.x)>=u_xlat6;\n    u_xlat0.x = (u_xlatb0) ? 0.0 : 1.0;\n    u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n    u_xlat10_1.xyz = texture2D(_Texture2D, vs_INTERP0.xy).xyz;\n    u_xlat2.xyz = (-u_xlat10_1.xyz) + _Edge_color.xyz;\n    u_xlat3.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat10_1.xyz;\n    u_xlat3.xyz = u_xlat3.xyz + (-_OffColor.xyz);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat3.xyz + _OffColor.xyz;\n    SV_TARGET0.xyz = u_xlat0.xyz;\n    SV_TARGET0.w = 1.0;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(0) uniform UnityPerDraw {\n#endif\n\tUNITY_UNIFORM vec4                hlslcc_mtx4x4unity_ObjectToWorld[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_WorldToObject[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_LODFade;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_WorldTransformParams;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RenderingLayer;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(2) uniform UnityPerFrame {\n#endif\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXglstate_lightmodel_ambient;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_AmbientSky;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_AmbientEquator;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_AmbientGround;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_IndirectSpecColor;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4glstate_matrix_projection[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_MatrixV[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_MatrixInvV[4];\n\tUNITY_UNIFORM vec4                hlslcc_mtx4x4unity_MatrixVP[4];\n\tUNITY_UNIFORM int Xhlslcc_UnusedXunity_StereoEyeIndex;\n\tUNITY_UNIFORM mediump vec4 Xhlslcc_UnusedXunity_ShadowColor;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\nin highp vec3 in_POSITION0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_INTERP0;\nout highp vec3 vs_INTERP1;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    vs_INTERP1.xyz = u_xlat0.xyz;\n    gl_Position = u_xlat1 + hlslcc_mtx4x4unity_MatrixVP[3];\n    vs_INTERP0 = in_TEXCOORD0;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(0) uniform UnityPerDraw {\n#endif\n\tUNITY_UNIFORM vec4                hlslcc_mtx4x4unity_ObjectToWorld[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXhlslcc_mtx4x4unity_WorldToObject[4];\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_LODFade;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_WorldTransformParams;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedXunity_RenderingLayer;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\nUNITY_BINDING(1) uniform UnityPerMaterial {\n#endif\n\tUNITY_UNIFORM float                _Fillpercent;\n\tUNITY_UNIFORM vec4                _OffColor;\n\tUNITY_UNIFORM vec4                _Edge_color;\n\tUNITY_UNIFORM float                _Edge_Width;\n\tUNITY_UNIFORM vec4 Xhlslcc_UnusedX_Texture2D_TexelSize;\n\tUNITY_UNIFORM float                _MeshHeight;\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n};\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _Texture2D;\nin highp vec4 vs_INTERP0;\nin highp vec3 vs_INTERP1;\nlayout(location = 0) out mediump vec4 SV_TARGET0;\nvec3 u_xlat0;\nbool u_xlatb0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nbool u_xlatb3;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.x = vs_INTERP1.y + (-hlslcc_mtx4x4unity_ObjectToWorld[3].y);\n    u_xlat3.x = abs(u_xlat0.x) + (-_Edge_Width);\n    u_xlat6 = _Fillpercent * _MeshHeight + abs(_Edge_Width);\n    u_xlatb3 = u_xlat3.x>=u_xlat6;\n    u_xlatb0 = abs(u_xlat0.x)>=u_xlat6;\n    u_xlat0.x = (u_xlatb0) ? 0.0 : 1.0;\n    u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n    u_xlat16_1.xyz = texture(_Texture2D, vs_INTERP0.xy).xyz;\n    u_xlat2.xyz = (-u_xlat16_1.xyz) + _Edge_color.xyz;\n    u_xlat3.xyz = u_xlat3.xxx * u_xlat2.xyz + u_xlat16_1.xyz;\n    u_xlat3.xyz = u_xlat3.xyz + (-_OffColor.xyz);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat3.xyz + _OffColor.xyz;\n    SV_TARGET0.xyz = u_xlat0.xyz;\n    SV_TARGET0.w = 1.0;\n    return;\n}\n\n"]